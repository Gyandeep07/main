# -*- coding: utf-8 -*-
"""numpy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15ZtFJjzdQTOfVLOGZkoAPBCaKKHmsRx_
"""

import numpy as np

from time import process_time

l1=[i for i in range(10000)]
start=process_time()
l1=[i+5 for i in l1]
end=process_time()
print (end-start)

l=np.array([i for i in range(10000)])
start=process_time()
l+=5
end=process_time()
print(end-start)

list1=np.array([1,3,5,7,8])
print(list1)
type(list1)

#1 D array
a=np.array([12,34,56,89])
print(a)

a.shape

b=np.array([(12,34,67),(23,89,90)])
b

b.shape

b=np.array([(12,34,67),(23,89,90)],dtype=float)
b

#initial placeholder all element are zero
z=np.zeros((3,5),dtype=int)
z

#all element are one
y=np.ones((3,4),dtype=int)
y

# for a perticular element
z=np.full((5,4),12)
z

#create identity matrix
z=np.eye(4,dtype=int)
z

#create numpy array with random value
b=np.random.random((3,4))
b

# random integer
c=np.random.randint(10,100,(3,4))
c

#evenly spaced values return the number of values
z=np.linspace(10,30,6)
z

#evenly spaced values with specific step
z=np.arange(10,30,6)
z

#convert list into numpy array
list2=[10,30,34,67]
z=np.asarray(list2)
print(z)
type(z)

c=np.random.randint(10,100,(5,5))
c

print(c.shape)

print(c.ndim)

#number of element
c.size

#datatype
c.dtype

#maths in numpy
l1=[1,2,3,4,5]
l2=[6,7,8,9,10]
print(l1+l2)#joins two list

li1=np.asarray(l1)
li2=np.asarray(l2)
print(li1+li2)
print(li1-li2)
print(li1*li2)
print(li1/li2)

print(np.add(li1,li2))
print(np.subtract(li1,li2))
print(np.multiply(li1,li2))
print(np.divide(li1,li2))

# array manupulation
z=np.random.randint(0,10,(3,4))
print(z.shape)
print(z)

#transpose
y=np.transpose(z)
print(y)
print(y.shape)

trans=y.T
print(trans)
print(trans.shape)

#reshaping the array
z=np.random.randint(0,10,(4,3))
z

c=z.reshape(3,4)
print(c)